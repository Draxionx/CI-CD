name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  packages: read
  contents: read

jobs:
  python-lint:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/draxionx/ci-cd/cicd:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    env:
      PY_PATHS: "./src/python"
      PYLINT_ARGS: ""
      PYCODESTYLE_ARGS: "--max-line-length=120"
    steps:
      - uses: actions/checkout@v4

      - name: Run pycodestyle
        run: python3 -m ci.actions.pycodestyle_action

      - name: Run pylint
        run: python3 -m ci.actions.pylint_action

  go-lint:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/draxionx/ci-cd/cicd:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    env:
      GOLANGCI_ARGS: "./..."
  steps:
    - uses: actions/checkout@v4
    - run: go build ./...
      working-directory: src/golang
    - run: go test ./... -count=1
      working-directory: src/golang
    - run: python3 -m ci.actions.golang_lint_action
      working-directory: src/golang

  cpp-tidy:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/draxionx/ci-cd/cicd:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    env:
      CPP_BUILD_DIR: "build"
      CPP_SRC: "src"
      CPP_HEADER_FILTER: "src/.*"
    steps:
      - uses: actions/checkout@v4
      - name: Configure & build
        run: |
          cmake -S . -B "$CPP_BUILD_DIR" -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
          cmake --build "$CPP_BUILD_DIR" --parallel
      - name: run clang-tidy via action
        run: python3 -m ci.actions.cpp_lint_action

  shell-lint:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/draxionx/ci-cd/cicd:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    env:
      SH_GLOBS: "src/shell/*.sh"
      SHELLCHECK_ARGS: "-S style -x"
    steps:
      - uses: actions/checkout@v4
      - name: ShellCheck (custom action)
        run: python3 -m ci.actions.shellcheck_action
